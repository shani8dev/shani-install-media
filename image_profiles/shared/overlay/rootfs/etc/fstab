# ============================================================================
# /etc/fstab - Enhanced Immutable OS Configuration
# ----------------------------------------------------------------------------
# This file defines mount points for a UEFI system that uses a Btrfs filesystem
# (labeled "shani_root") divided into several subvolumes, as well as tmpfs mounts
# for directories containing transient data.
# Comprehensive subvolume design with optimized persistence strategy
#
# IMMUTABLE OS DESIGN:
# - Root filesystem (/) is read-only (systemd.volatile=state)
# - /etc is writable via overlay
# - /var is tmpfs (systemd.volatile=state handles this)
# - Critical app data persists via dedicated subvolumes
# - System services persist via bind mounts from /data/varlib
#
# Btrfs Subvolumes (from "shani_root"):
#
# Btrfs Subvolumes (from "shani_root"):
#   - @home        => /home          (user data)
#   - @data        => /data                    (overlay storage + bind sources)
#   - @cache       => /var/cache               (package cache)
#   - @log         => /var/log                 (system logs)
#   - @flatpak     => /var/lib/flatpak         (Flatpak apps)
#   - @containers  => /var/lib/containers      (Podman/Docker containers)
#   - @libvirt     => /var/lib/libvirt         (QEMU/KVM VMs - nodatacow)
#   - @machines    => /var/lib/machines        (systemd-nspawn containers)
#   - @swap        => /swap                    (swap - nodatacow)
#
# Persistent system service data (stored in @data subvolume):
#   /data/varlib/bluetooth       => /var/lib/bluetooth
#   /data/varlib/fprint          => /var/lib/fprint
#   /data/varlib/AccountsService => /var/lib/AccountsService
#   /data/varlib/systemd         => /var/lib/systemd
#   /data/varlib/NetworkManager  => /var/lib/NetworkManager
#   /data/varlib/boltd           => /var/lib/boltd

# Common options for Btrfs subvolumes:
#   noatime         - Disable access time updates (reduces unnecessary writes).
#   compress=zstd   - Enable on-the-fly compression with zstd.
#   space_cache=v2  - Use the updated free space cache.
#   autodefrag      - Enable automatic defragmentation (beneficial for HDDs).
#
# Note: The swap subvolume uses nodatacow and nospace_cache to disable CoW,
#       ensuring optimal swap performance.
#
# tmpfs mounts are used for directories with volatile data to reduce disk I/O.
# ============================================================================
 
#############################
# EFI System Partition      #
#############################
# Mount the EFI partition (required for UEFI boot).
LABEL=shani_boot   /boot/efi   vfat    defaults  0 2

#############################
# Core Btrfs Subvolumes (RW)     #
#############################
# Mount Btrfs subvolumes from the filesystem labeled "shani_root".

# /home: User data
LABEL=shani_root   /home   btrfs   defaults,noatime,subvol=@home,rw,compress=zstd,space_cache=v2,autodefrag  0 0

# /data: For persistent storage (e.g. used by the overlay for /etc)
LABEL=shani_root   /data   btrfs   defaults,noatime,subvol=@data,rw,compress=zstd,space_cache=v2,autodefrag  0 0

# /var/cache: Separate subvolume for system variable cache data
LABEL=shani_root   /var/cache    btrfs   defaults,noatime,subvol=@cache,rw,compress=zstd,space_cache=v2,autodefrag,x-systemd.after=var.mount,x-systemd.requires=var.mount  0 0

# /var/log: Separate subvolume for system variable log data
LABEL=shani_root   /var/log    btrfs   defaults,noatime,subvol=@log,rw,compress=zstd,space_cache=v2,autodefrag,x-systemd.after=var.mount,x-systemd.requires=var.mount  0 0

#############################
# Application Subvolumes    #
#############################
# Flatpak applications
LABEL=shani_root   /var/lib/flatpak   btrfs   defaults,noatime,subvol=@flatpak,rw,compress=zstd,space_cache=v2,autodefrag,x-systemd.after=var.mount,x-systemd.requires=var.mount  0 0

# Container storage (Podman/Docker)
LABEL=shani_root   /var/lib/containers   btrfs   defaults,noatime,subvol=@containers,rw,compress=zstd,space_cache=v2,autodefrag,x-systemd.after=var.mount,x-systemd.requires=var.mount  0 0

# VM images (disable CoW for performance)
LABEL=shani_root   /var/lib/libvirt   btrfs   defaults,noatime,subvol=@libvirt,rw,nodatacow,x-systemd.after=var.mount,x-systemd.requires=var.mount  0 0

# systemd-nspawn containers
LABEL=shani_root   /var/lib/machines   btrfs   defaults,noatime,subvol=@machines,rw,compress=zstd,space_cache=v2,autodefrag,x-systemd.after=var.mount,x-systemd.requires=var.mount  0 0

######################################
# Swap Space (Swapfile on Btrfs)     #
######################################
# /swap: Swap space (disable CoW and compression)
LABEL=shani_root   /swap   btrfs   noatime,subvol=@swap,rw,nodatacow,nospace_cache  0 0

# Ensure the swapfile is mounted at boot.
/swap/swapfile none swap sw 0 0

######################################
# tmpfs for Volatile Directories     #
######################################
# These tmpfs mounts store volatile data in RAM to reduce disk writes.
#
# /tmp: Temporary files; data is cleared at reboot.
tmpfs   /tmp      tmpfs   defaults,noatime   0 0

# /run: Runtime data for processes and services.
tmpfs   /run      tmpfs   defaults,noatime   0 0

##############################
# Overlay for /etc           #
##############################
# Directly reference root's /etc as lowerdir
overlay /etc overlay  rw,lowerdir=/etc,upperdir=/data/overlay/etc/upper,workdir=/data/overlay/etc/work,index=off,metacopy=off,x-systemd.requires-mounts-for=/data  0 0

##############################
# Overlay for /var           #
##############################
# Directly reference root's /var as lowerdir
# not using due to /var being made tmpfs by systemd.volatile=state cmdline parameter
#overlay /var overlay  rw,lowerdir=/var,upperdir=/data/overlay/var/upper,workdir=/data/overlay/var/work,index=off,metacopy=off,x-systemd.requires-mounts-for=/data  0 0

##############################
# Bind Mounts from /data     #
##############################
# System service persistence via bind mounts
# Prerequisites: mkdir -p /data/varlib/{bluetooth,fprint,AccountsService,systemd,NetworkManager,boltd}

/data/varlib/bluetooth         /var/lib/bluetooth         none   bind,x-systemd.after=var.mount,x-systemd.requires-mounts-for=/data  0 0
/data/varlib/fprint            /var/lib/fprint            none   bind,x-systemd.after=var.mount,x-systemd.requires-mounts-for=/data  0 0
/data/varlib/AccountsService   /var/lib/AccountsService   none   bind,x-systemd.after=var.mount,x-systemd.requires-mounts-for=/data  0 0
/data/varlib/systemd           /var/lib/systemd           none   bind,x-systemd.after=var.mount,x-systemd.requires-mounts-for=/data  0 0
/data/varlib/NetworkManager    /var/lib/NetworkManager    none   bind,x-systemd.after=var.mount,x-systemd.requires-mounts-for=/data  0 0
/data/varlib/boltd             /var/lib/boltd             none   bind,x-systemd.after=var.mount,x-systemd.requires-mounts-for=/data  0 0

######################################
# Notes                              #
######################################
# 1. Requires kernel cmdline: systemd.volatile=state
# 2. /var becomes tmpfs automatically (systemd.volatile=state)
# 3. Create overlay directories before first boot:
#    mkdir -p /data/overlay/etc/{upper,work}
# 4. Create bind mount sources before first boot:
#    mkdir -p /data/varlib/{bluetooth,fprint,AccountsService,systemd,NetworkManager,boltd}
